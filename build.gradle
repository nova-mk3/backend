plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.hibernate.orm' version '6.6.2.Final'
    id 'org.graalvm.buildtools.native' version '0.10.3'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'org.nova'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {


    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    implementation "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

def generatedDir = "src/main/generated"

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(generatedDir)
}

sourceSets {
    main.java.srcDirs += [generatedDir]
}

clean {
    delete file(generatedDir)
}